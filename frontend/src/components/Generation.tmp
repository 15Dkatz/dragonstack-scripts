import React, { Component } from 'react';

// const MINIMUM_MILLISECONDS = 15000;

// another example of the machine-like behavior of the application
class Generation extends Component {
  // state = { timer: null }
  // state = { generation: null }
  state = { generation: { id: 999, expiration: new Date() } }

  // componentDidMount() {
  //   // this.fetchNextGeneration();
  //   this.fetchGeneration();
  // }

  // fetchGeneration = () => {
  //   // TODO: hit the generation endpoint and set the generation in state
  // };

  // componentWillUnmount() {
  //   clearTimeout(this.state.timer);
  // }

  // fetchNextGeneration() {
  //   this.props.fetchGeneration();

  //   let millisecondsUntilExpiration =
  //     new Date(this.props.generation.expiration).getTime() - (new Date().getTime());

  //   // make sure millisecondsUntilExpiration never goes lower than 15 seconds
  //   // otherwise the value of 0 will cause an infinite loop that is too hot
  //   if (millisecondsUntilExpiration < MINIMUM_MILLISECONDS) {
  //     millisecondsUntilExpiration = MINIMUM_MILLISECONDS;
  //   }

  //   this.setState({
  //     timer: setTimeout(() => this.fetchNextGeneration(), millisecondsUntilExpiration)
  //   });
  // }

  render() {
    const { generation } = this.state;

    return (
      <div>
        <h3>Generation {generation.id}. Expires on:</h3>
        <h4>{new Date(generation.expiration).toString()}</h4>
      </div>
    );
  }
}

console.log('hi')

export default Generation;